// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.4.0.0
//      SpecFlow Generator Version:2.4.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace APITests.Features.DEXEndpoint
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.4.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("DealerExperienceEndpointTest")]
    public partial class DealerExperienceEndpointTestFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "DealerExperienceEndpointTest.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "DealerExperienceEndpointTest", "\tTo validate response codes on DEX endpoint\r\n\tfor ORV", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<NUnit.Framework.TestContext>(NUnit.Framework.TestContext.CurrentContext);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Error scenario invalid year")]
        [NUnit.Framework.CategoryAttribute("DEX_API")]
        [NUnit.Framework.TestCaseAttribute("RZR", "2021", "02040900", "404", null)]
        [NUnit.Framework.TestCaseAttribute("RAN", "2021", "02040900", "404", null)]
        [NUnit.Framework.TestCaseAttribute("GEN", "2021", "02040900", "404", null)]
        [NUnit.Framework.TestCaseAttribute("ATV", "2021", "02040900", "404", null)]
        [NUnit.Framework.TestCaseAttribute("ACE", "2021", "02040900", "404", null)]
        [NUnit.Framework.TestCaseAttribute("RZR", "2017", "02040900", "404", null)]
        [NUnit.Framework.TestCaseAttribute("RAN", "2018", "02040900", "404", null)]
        [NUnit.Framework.TestCaseAttribute("GEN", "2018", "02040900", "404", null)]
        [NUnit.Framework.TestCaseAttribute("ATV", "2018", "02040900", "404", null)]
        [NUnit.Framework.TestCaseAttribute("ACE", "2018", "02040900", "404", null)]
        public virtual void ErrorScenarioInvalidYear(string brand, string year, string dealer, string response, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "DEX_API"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Error scenario invalid year", null, @__tags);
#line 8
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 9
 testRunner.Given(string.Format("I have DEX {0} endpoint with year {1} and dealer {2}", brand, year, dealer), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 10
 testRunner.When("I call GET method", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 11
 testRunner.Then(string.Format("API response code is {0}", response), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Error scenario invalid year format")]
        [NUnit.Framework.CategoryAttribute("DEX_API")]
        [NUnit.Framework.TestCaseAttribute("RZR", "202", "02040900", "404", null)]
        [NUnit.Framework.TestCaseAttribute("RAN", "202", "02040900", "404", null)]
        [NUnit.Framework.TestCaseAttribute("GEN", "202", "02040900", "404", null)]
        [NUnit.Framework.TestCaseAttribute("ATV", "202", "02040900", "404", null)]
        [NUnit.Framework.TestCaseAttribute("ACE", "202", "02040900", "404", null)]
        public virtual void ErrorScenarioInvalidYearFormat(string brand, string year, string dealer, string response, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "DEX_API"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Error scenario invalid year format", null, @__tags);
#line 26
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 27
 testRunner.Given(string.Format("I have DEX {0} endpoint with year {1} and dealer {2}", brand, year, dealer), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 28
 testRunner.When("I call GET method", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 29
 testRunner.Then(string.Format("API response code is {0}", response), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Error scenario invalid dealer id")]
        [NUnit.Framework.CategoryAttribute("DEX_API")]
        [NUnit.Framework.TestCaseAttribute("RZR", "2019", "123456", "404", null)]
        [NUnit.Framework.TestCaseAttribute("RAN", "2019", "123456", "404", null)]
        [NUnit.Framework.TestCaseAttribute("GEN", "2019", "123456", "404", null)]
        [NUnit.Framework.TestCaseAttribute("ATV", "2019", "123456", "404", null)]
        [NUnit.Framework.TestCaseAttribute("ACE", "2019", "123456", "404", null)]
        public virtual void ErrorScenarioInvalidDealerId(string brand, string year, string dealer, string response, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "DEX_API"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Error scenario invalid dealer id", null, @__tags);
#line 39
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 40
 testRunner.Given(string.Format("I have DEX {0} endpoint with year {1} and dealer {2}", brand, year, dealer), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 41
 testRunner.When("I call GET method", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 42
 testRunner.Then(string.Format("API response code is {0}", response), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Success scenario valid year valid dealer id")]
        [NUnit.Framework.CategoryAttribute("DEX_API")]
        [NUnit.Framework.TestCaseAttribute("RZR", "2019", "02040900", "200", null)]
        [NUnit.Framework.TestCaseAttribute("RAN", "2019", "02040900", "200", null)]
        [NUnit.Framework.TestCaseAttribute("GEN", "2019", "02040900", "200", null)]
        [NUnit.Framework.TestCaseAttribute("ATV", "2019", "02040900", "200", null)]
        [NUnit.Framework.TestCaseAttribute("ACE", "2019", "02040900", "200", null)]
        public virtual void SuccessScenarioValidYearValidDealerId(string brand, string year, string dealer, string response, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "DEX_API"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Success scenario valid year valid dealer id", null, @__tags);
#line 52
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 53
 testRunner.Given(string.Format("I have DEX {0} endpoint with year {1} and dealer {2}", brand, year, dealer), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 54
 testRunner.When("I call GET method", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 55
 testRunner.Then(string.Format("API response code is {0}", response), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Success scenario validate response properties")]
        [NUnit.Framework.CategoryAttribute("DEX_API")]
        [NUnit.Framework.TestCaseAttribute("RZR", "2019", "02040900", "200", null)]
        [NUnit.Framework.TestCaseAttribute("RAN", "2019", "02040900", "200", null)]
        [NUnit.Framework.TestCaseAttribute("GEN", "2019", "02040900", "200", null)]
        [NUnit.Framework.TestCaseAttribute("ATV", "2019", "02040900", "200", null)]
        [NUnit.Framework.TestCaseAttribute("ACE", "2019", "02040900", "200", null)]
        public virtual void SuccessScenarioValidateResponseProperties(string brand, string year, string dealer, string response, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "DEX_API"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Success scenario validate response properties", null, @__tags);
#line 65
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 66
 testRunner.Given(string.Format("I have DEX {0} endpoint with year {1} and dealer {2}", brand, year, dealer), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 67
 testRunner.When("I call GET method", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 68
 testRunner.Then(string.Format("API response code is {0}", response), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
